{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/SteveRoe/Documents/Coding/letsgo/spacex/pages/past_launches.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query LaunchesQuery {\\n    launches {\\n      flight_number\\n      mission_name\\n      launch_date_local\\n      launch_success\\n      details\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Past_Launch from \"../components/past_launches/Past_Launch.js\";\nvar client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\"\n}); // import LaunchItem from \"./LaunchItem\";\n// import MissionKey from \"./MissionKey\";\n\nvar LAUNCHES_QUERY = gql(_templateObject()); // export class Launches extends Component {\n//   render() {\n//     return (\n//       <Fragment>\n//         <h1 className=\"display-4 my-3\">Launches</h1>\n//         {/* <MissionKey /> */}\n//         <Query query={LAUNCHES_QUERY}>\n//           {({ loading, error, data }) => {\n//             if (loading) return <h4>Loading...</h4>;\n//             if (error) console.log(error);\n//             console.log(data);\n//             return (\n//               <h2>Test</h2>\n//               //   <Fragment>\n//               //     {data.launches.map((launch) => (\n//               //       <LaunchItem key={launch.flight_number} launch={launch} />\n//               //     ))}\n//               //   </Fragment>\n//             );\n//           }}\n//         </Query>\n//       </Fragment>\n//     );\n//   }\n// }\n\nvar Past_Launches = function Past_Launches() {\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"launches\"), __jsx(Past_Launch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = Past_Launches;\nexport default Past_Launches;\n\nvar _c;\n\n$RefreshReg$(_c, \"Past_Launches\");","map":{"version":3,"sources":["/Users/SteveRoe/Documents/Coding/letsgo/spacex/pages/past_launches.js"],"names":["React","Component","Fragment","gql","Query","ApolloClient","ApolloProvider","Past_Launch","client","uri","LAUNCHES_QUERY","Past_Launches"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,IAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC9BI,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf,C,CAGA;AACA;;AAEA,IAAMC,cAAc,GAAGP,GAAH,mBAApB,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAPD;;KAAMG,a;AAQN,eAAeA,aAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Past_Launch from \"../components/past_launches/Past_Launch.js\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\",\n});\n// import LaunchItem from \"./LaunchItem\";\n// import MissionKey from \"./MissionKey\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n      details\n    }\n  }\n`;\n\n// export class Launches extends Component {\n//   render() {\n//     return (\n//       <Fragment>\n//         <h1 className=\"display-4 my-3\">Launches</h1>\n//         {/* <MissionKey /> */}\n//         <Query query={LAUNCHES_QUERY}>\n//           {({ loading, error, data }) => {\n//             if (loading) return <h4>Loading...</h4>;\n//             if (error) console.log(error);\n//             console.log(data);\n//             return (\n//               <h2>Test</h2>\n//               //   <Fragment>\n//               //     {data.launches.map((launch) => (\n//               //       <LaunchItem key={launch.flight_number} launch={launch} />\n//               //     ))}\n//               //   </Fragment>\n//             );\n//           }}\n//         </Query>\n//       </Fragment>\n//     );\n//   }\n// }\nconst Past_Launches = () => {\n  return (\n    <ApolloProvider client={client}>\n      <h2>launches</h2>\n      <Past_Launch />\n    </ApolloProvider>\n  );\n};\nexport default Past_Launches;\n"]},"metadata":{},"sourceType":"module"}