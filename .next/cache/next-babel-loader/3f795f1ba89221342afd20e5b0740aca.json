{"ast":null,"code":"var _jsxFileName = \"/Users/SteveRoe/Documents/Coding/letsgo/spacex/pages/past_launches.js\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Past_Launch from \"../components/past_launches/Past_Launch.js\";\nimport withApollo, { clientFn } from \"../libs/withApollo\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\"\n});\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_year\n      launch_date_local\n      launch_success\n      details\n    }\n  }\n`;\n\nconst Past_Launches = () => {\n  const {\n    loading,\n    data\n  } = useQuery(LAUNCHES_QUERY);\n\n  if (loading || !data) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, data.title); // return (\n  // <ApolloProvider client={client}>\n  //   <div>\n  //     <Query query={LAUNCHES_QUERY}>\n  //       {({ loading, error, data }) => {\n  //         if (loading) return <h4>Loading...</h4>;\n  //         if (error) console.log(error);\n  //         console.log(data.launches.mission_name);\n  //         return (\n  //           <div>\n  //             <h2>Test</h2>\n  //             {data.launches.map((launch) => {\n  //               return (\n  //                 <Past_Launch key={launch.flight_number} launch={launch} />\n  //               );\n  //             })}\n  //           </div>\n  //         );\n  //       }}\n  //     </Query>\n  //   </div>\n  // </ApolloProvider>\n  // );\n};\n\nexport const getServerSideProps = async () => {\n  const apolloClient = clientFn(); // apolloClient.* https://www.apollographql.com/docs/react/api/apollo-client/#apolloclient-functions\n  // You do not use hooks like useQuery, useMutation in here\n\n  return {\n    props: {\n      apollo: apolloClient,\n      apolloState: {\n        data: apolloClient.cache.extract()\n      }\n    }\n  };\n};\nexport default withApollo(Past_Launches);","map":{"version":3,"sources":["/Users/SteveRoe/Documents/Coding/letsgo/spacex/pages/past_launches.js"],"names":["React","Component","Fragment","gql","Query","ApolloClient","ApolloProvider","Past_Launch","withApollo","clientFn","client","uri","LAUNCHES_QUERY","Past_Launches","loading","data","useQuery","title","getServerSideProps","apolloClient","props","apollo","apolloState","cache","extract"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAqC,oBAArC;AAEA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;AAIA,MAAMC,cAAc,GAAGT,GAAI;;;;;;;;;;;CAA3B;;AAaA,MAAMU,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBC,QAAQ,CAACJ,cAAD,CAAlC;;AAEA,MAAIE,OAAO,IAAI,CAACC,IAAhB,EAAsB;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACE,KAAV,CAAP,CAN0B,CAO1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAhCD;;AAkCA,OAAO,MAAMC,kBAAkB,GAAG,YAAY;AAC5C,QAAMC,YAAY,GAAGV,QAAQ,EAA7B,CAD4C,CAE5C;AACA;;AACA,SAAO;AACLW,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAEF,YADH;AAELG,MAAAA,WAAW,EAAE;AACXP,QAAAA,IAAI,EAAEI,YAAY,CAACI,KAAb,CAAmBC,OAAnB;AADK;AAFR;AADF,GAAP;AAQD,CAZM;AAcP,eAAehB,UAAU,CAACK,aAAD,CAAzB","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Past_Launch from \"../components/past_launches/Past_Launch.js\";\nimport withApollo, { clientFn } from \"../libs/withApollo\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\",\n});\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_year\n      launch_date_local\n      launch_success\n      details\n    }\n  }\n`;\n\nconst Past_Launches = () => {\n  const { loading, data } = useQuery(LAUNCHES_QUERY);\n\n  if (loading || !data) {\n    return <h1>loading...</h1>;\n  }\n  return <h1>{data.title}</h1>;\n  // return (\n\n  // <ApolloProvider client={client}>\n  //   <div>\n  //     <Query query={LAUNCHES_QUERY}>\n  //       {({ loading, error, data }) => {\n  //         if (loading) return <h4>Loading...</h4>;\n  //         if (error) console.log(error);\n  //         console.log(data.launches.mission_name);\n  //         return (\n  //           <div>\n  //             <h2>Test</h2>\n\n  //             {data.launches.map((launch) => {\n  //               return (\n  //                 <Past_Launch key={launch.flight_number} launch={launch} />\n  //               );\n  //             })}\n  //           </div>\n  //         );\n  //       }}\n  //     </Query>\n  //   </div>\n  // </ApolloProvider>\n  // );\n};\n\nexport const getServerSideProps = async () => {\n  const apolloClient = clientFn();\n  // apolloClient.* https://www.apollographql.com/docs/react/api/apollo-client/#apolloclient-functions\n  // You do not use hooks like useQuery, useMutation in here\n  return {\n    props: {\n      apollo: apolloClient,\n      apolloState: {\n        data: apolloClient.cache.extract(),\n      },\n    },\n  };\n};\n\nexport default withApollo(Past_Launches);\n"]},"metadata":{},"sourceType":"module"}