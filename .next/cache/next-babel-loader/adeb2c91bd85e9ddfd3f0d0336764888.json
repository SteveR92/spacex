{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/SteveRoe/Documents/Coding/letsgo/spacex/pages/launches/[flight_number].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query LaunchQuery($flight_number: Int!) {\\n    launch(flight_number: $flight_number) {\\n      flight_number\\n      mission_name\\n      launch_year\\n      launch_success\\n      launch_date_local\\n      details\\n      rocket {\\n        rocket_id\\n        rocket_name\\n        rocket_type\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nvar client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\"\n});\nvar LAUNCH_QUERY = gql(_templateObject());\nexport var __N_SSP = true;\nexport default (function (_ref) {\n  var flightNumber = _ref.flightNumber;\n  var flight_number = req.params.flight_number;\n  flight_number = parseInt(flightNumber);\n  console.log(flight_number);\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Query, {\n    query: LAUNCH_QUERY,\n    variables: flight_number,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var loading = _ref2.loading,\n        error = _ref2.error,\n        data = _ref2.data;\n    console.log({\n      data: data\n    });\n    if (loading) return __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 31\n      }\n    }, \"Loading...\");\n    if (error) console.log(error);\n    var _data$launch = data.launch,\n        mission_name = _data$launch.mission_name,\n        flight_number = _data$launch.flight_number,\n        launch_year = _data$launch.launch_year,\n        launch_success = _data$launch.launch_success,\n        details = _data$launch.details;\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }\n    }, \"Flight Number: \", flight_number);\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Flight\")));\n});","map":{"version":3,"sources":["/Users/SteveRoe/Documents/Coding/letsgo/spacex/pages/launches/[flight_number].js"],"names":["gql","Query","ApolloClient","ApolloProvider","client","uri","LAUNCH_QUERY","flightNumber","flight_number","req","params","parseInt","console","log","loading","error","data","launch","mission_name","launch_year","launch_success","details"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,IAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;AAIA,IAAMC,YAAY,GAAGN,GAAH,mBAAlB;;AAiBA,gBAAe,gBAAsB;AAAA,MAAnBO,YAAmB,QAAnBA,YAAmB;AACnC,MAAIC,aAAa,GAAGC,GAAG,CAACC,MAAJ,CAAWF,aAA/B;AACAA,EAAAA,aAAa,GAAGG,QAAQ,CAACJ,YAAD,CAAxB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEE,YAAd;AAA4B,IAAA,SAAS,EAAEE,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iBAA8B;AAAA,QAA3BM,OAA2B,SAA3BA,OAA2B;AAAA,QAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,QAAXC,IAAW,SAAXA,IAAW;AAC7BJ,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEG,MAAAA,IAAI,EAAJA;AAAF,KAAZ;AACA,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAIC,KAAJ,EAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAHkB,uBAWzBC,IAAI,CAACC,MAXoB;AAAA,QAM3BC,YAN2B,gBAM3BA,YAN2B;AAAA,QAO3BV,aAP2B,gBAO3BA,aAP2B;AAAA,QAQ3BW,WAR2B,gBAQ3BA,WAR2B;AAAA,QAS3BC,cAT2B,gBAS3BA,cAT2B;AAAA,QAU3BC,OAV2B,gBAU3BA,OAV2B;AAY7B,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAqBb,aAArB,CAAP;AACD,GAdH,CADF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAjBF,CADF;AAuBD,CA3BD","sourcesContent":["import gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\",\n});\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n      flight_number\n      mission_name\n      launch_year\n      launch_success\n      launch_date_local\n      details\n      rocket {\n        rocket_id\n        rocket_name\n        rocket_type\n      }\n    }\n  }\n`;\nexport default ({ flightNumber }) => {\n  let flight_number = req.params.flight_number;\n  flight_number = parseInt(flightNumber);\n  console.log(flight_number);\n  return (\n    <ApolloProvider client={client}>\n      <Query query={LAUNCH_QUERY} variables={flight_number}>\n        {({ loading, error, data }) => {\n          console.log({ data });\n          if (loading) return <h4>Loading...</h4>;\n          if (error) console.log(error);\n\n          const {\n            mission_name,\n            flight_number,\n            launch_year,\n            launch_success,\n            details,\n          } = data.launch;\n          return <div>Flight Number: {flight_number}</div>;\n        }}\n      </Query>\n      <div>\n        <h2>Flight</h2>\n      </div>\n    </ApolloProvider>\n  );\n};\n\nexport const getServerSideProps = async (req) => {\n  const res = req.params.flight_number;\n  return { props: { flightNumber: res } };\n};\n"]},"metadata":{},"sourceType":"module"}