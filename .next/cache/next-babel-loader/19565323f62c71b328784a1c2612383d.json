{"ast":null,"code":"var _jsxFileName = \"/Users/SteveRoe/Documents/Coding/letsgo/spacex/pages/past_launches.js\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Past_Launch from \"../components/past_launches/Past_Launch.js\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\"\n}); // import LaunchItem from \"./LaunchItem\";\n// import MissionKey from \"./MissionKey\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n      details\n    }\n  }\n`;\n\nconst Past_Launches = () => {\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"launches\"), __jsx(Query, {\n    query: LAUNCHES_QUERY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    }, \"Loading...\");\n    if (error) console.log(error);\n    console.log(data.launches.mission_name);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"Test\"), data.launches.map(launch => {\n      return __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, __jsx(\"li\", {\n        key: launch.flight_number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }\n      }, data.mission_name));\n    }));\n  })));\n};\n\nexport default Past_Launches;","map":{"version":3,"sources":["/Users/SteveRoe/Documents/Coding/letsgo/spacex/pages/past_launches.js"],"names":["React","Component","Fragment","gql","Query","ApolloClient","ApolloProvider","Past_Launch","client","uri","LAUNCHES_QUERY","Past_Launches","loading","error","data","console","log","launches","mission_name","map","launch","flight_number"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,MAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC9BI,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf,C,CAGA;AACA;;AAEA,MAAMC,cAAc,GAAGP,GAAI;;;;;;;;;;CAA3B;;AAYA,MAAMQ,aAAa,GAAG,MAAM;AAC1B,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEE,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AAC7B,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAIC,KAAJ,EAAWE,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACXE,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,QAAL,CAAcC,YAA1B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGJ,IAAI,CAACG,QAAL,CAAcE,GAAd,CAAmBC,MAAD,IAAY;AAC7B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,GAAG,EAAEA,MAAM,CAACC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCP,IAAI,CAACI,YAArC,CADF,CADF;AAKD,KANA,CAHH,CADF;AAaD,GAlBH,CAFF,CADF,CADF;AA2BD,CA5BD;;AA6BA,eAAeP,aAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Past_Launch from \"../components/past_launches/Past_Launch.js\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\",\n});\n// import LaunchItem from \"./LaunchItem\";\n// import MissionKey from \"./MissionKey\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n      details\n    }\n  }\n`;\n\nconst Past_Launches = () => {\n  return (\n    <ApolloProvider client={client}>\n      <div>\n        <h2>launches</h2>\n        <Query query={LAUNCHES_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) console.log(error);\n            console.log(data.launches.mission_name);\n            return (\n              <div>\n                <h2>Test</h2>\n\n                {data.launches.map((launch) => {\n                  return (\n                    <ul>\n                      <li key={launch.flight_number}>{data.mission_name}</li>\n                    </ul>\n                  );\n                })}\n              </div>\n            );\n          }}\n        </Query>\n      </div>\n    </ApolloProvider>\n  );\n};\nexport default Past_Launches;\n"]},"metadata":{},"sourceType":"module"}