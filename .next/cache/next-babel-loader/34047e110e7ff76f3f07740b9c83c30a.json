{"ast":null,"code":"var _jsxFileName = \"/Users/SteveRoe/Documents/Coding/letsgo/spacex/libs/withApollo.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport withApollo from \"next-with-apollo\";\nimport ApolloClient, { InMemoryCache, HttpLink } from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nexport const clientFn = ({\n  initialState\n} = {}) => new ApolloClient({\n  cache: new InMemoryCache().restore(initialState || {}),\n  uri: \"http://localhost:5000/graphql\"\n});\nexport default withApollo(clientFn, {\n  render: ({\n    Page,\n    props\n  }) => {\n    return __jsx(ApolloProvider, {\n      client: props.apollo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, __jsx(Page, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    })));\n  }\n});","map":{"version":3,"sources":["/Users/SteveRoe/Documents/Coding/letsgo/spacex/libs/withApollo.js"],"names":["withApollo","ApolloClient","InMemoryCache","HttpLink","ApolloProvider","clientFn","initialState","cache","restore","uri","render","Page","props","apollo"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,IAAuBC,aAAvB,EAAsCC,QAAtC,QAAsD,cAAtD;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,IAAmB,EAApB,KACtB,IAAIL,YAAJ,CAAiB;AACfM,EAAAA,KAAK,EAAE,IAAIL,aAAJ,GAAoBM,OAApB,CAA4BF,YAAY,IAAI,EAA5C,CADQ;AAEfG,EAAAA,GAAG,EAAE;AAFU,CAAjB,CADK;AAMP,eAAeT,UAAU,CAACK,QAAD,EAAW;AAClCK,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KAAqB;AAC3B,WACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEA,KAAK,CAACC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;AAPiC,CAAX,CAAzB","sourcesContent":["import withApollo from \"next-with-apollo\";\nimport ApolloClient, { InMemoryCache, HttpLink } from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nexport const clientFn = ({ initialState } = {}) =>\n  new ApolloClient({\n    cache: new InMemoryCache().restore(initialState || {}),\n    uri: \"http://localhost:5000/graphql\",\n  });\n\nexport default withApollo(clientFn, {\n  render: ({ Page, props }) => {\n    return (\n      <ApolloProvider client={props.apollo}>\n        <Page {...props} />\n      </ApolloProvider>\n    );\n  },\n});\n"]},"metadata":{},"sourceType":"module"}